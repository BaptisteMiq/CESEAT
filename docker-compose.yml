services:
  # Frontend Application
  application:
    build: ./Application
    command: npm start
    volumes:
      - ./Application:/app
    ports:
      - "3000:3000"
  
  # The MySQL Server for Users
  # data:
  #   build: - ./Database/dump.
  mysql:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=mysqlpw
    ports:
      - 3306:3306
    volumes:
      - ./Database/dump:/docker-entrypoint-initdb.d

  # The Middleware containing the GraphQL Server
  middleware:
    build: ./Middleware
    image: mysql/mysql-server
    command: npm run prod
    volumes:
      - ./Middleware:/src
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
    restart: always

  # Microservice for Accounts
  microservice_accounts_1:
    build: ./Microservices/Accounts
    command: npm run prod
    volumes:
      - ./Microservices/Accounts:/app
    ports:
      - "5001:5000"
    restart: always
    depends_on:
      - mysql
  microservice_accounts_2:
    build: ./Microservices/Accounts
    command: npm run prod
    volumes:
      - ./Microservices/Accounts:/app
    ports:
      - "5002:5000"
    restart: always
    depends_on:
      - mysql

  # Microservice for the Orders
  microservice_orders_1:
    build: ./Microservices/Orders
    command: npm run prod
    volumes:
      - ./Microservices/Orders:/app
    ports:
      - "4501:4500"
    restart: always
    depends_on:
      - mysql
  microservice_orders_2:
    build: ./Microservices/Orders
    command: npm run prod
    volumes:
      - ./Microservices/Accounts:/app
    ports:
      - "4502:4500"
    restart: always
    depends_on:
      - mysql

  # Microservice for the CDN
  microservice_cdn_1:
    build: ./Microservices/CDN
    command: npm start
    volumes:
      - ./Microservices/CDN:/app
      - ./Microservices/CDN/uploads:/uploads
    ports:
      - "3101:3001"
    restart: always
  microservice_cdn_2:
    build: ./Microservices/CDN
    command: npm start
    volumes:
      - ./Microservices/CDN:/app
      - ./Microservices/CDN/uploads:/uploads
    ports:
      - "3102:3001"
    restart: always

  # Microservice for the Sockets
  microservice_sockets_1:
    build: ./Microservices/Sockets
    command: npm run prod
    volumes:
      - ./Microservices/Sockets:/app
    ports:
      - "4700:4700"
    restart: always

  # Proxy
  nginx:
    build: ./Proxy
    depends_on:
      - microservice_accounts_1
      - microservice_accounts_2
      - microservice_orders_1
      - microservice_orders_2
      - microservice_cdn_1
      - microservice_cdn_2
    ports:
      - "5100:5100"
      - "3100:3100"
      # - "4100:4100"
      - "4600:4600"
      - "80:80"
      - "443:443"
    restart: always